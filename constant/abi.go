package constant

import (
	"github.com/ethereum/go-ethereum/accounts/abi"
	"strings"
)

const (
	McsAbi       = `[{"inputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"name":"orderList","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"_chainId","type":"uint256"},{"internalType":"bytes","name":"_receiptProof","type":"bytes"}],"name":"executeIn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_chainId","type":"uint256"},{"internalType":"bytes","name":"_receiptProof","type":"bytes"}],"name":"swapIn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_fromChain","type":"uint256"},{"internalType":"bytes","name":"receiptProof","type":"bytes"}],"name":"depositIn","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"},{"internalType":"bytes","name":"receiptProof","type":"bytes"}],"name":"transferIn","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"bytes","name":"parentHash","type":"bytes"},{"internalType":"address","name":"coinbase","type":"address"},{"internalType":"bytes","name":"root","type":"bytes"},{"internalType":"bytes","name":"txHash","type":"bytes"},{"internalType":"bytes","name":"receiptHash","type":"bytes"},{"internalType":"bytes","name":"bloom","type":"bytes"},{"internalType":"uint256","name":"number","type":"uint256"},{"internalType":"uint256","name":"gasLimit","type":"uint256"},{"internalType":"uint256","name":"gasUsed","type":"uint256"},{"internalType":"uint256","name":"time","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"},{"internalType":"bytes","name":"mixDigest","type":"bytes"},{"internalType":"bytes","name":"nonce","type":"bytes"},{"internalType":"uint256","name":"baseFee","type":"uint256"}],"internalType":"struct ILightNodePoint.blockHeader","name":"header","type":"tuple"},{"components":[{"internalType":"address[]","name":"validators","type":"address[]"},{"internalType":"bytes[]","name":"addedPubKey","type":"bytes[]"},{"internalType":"bytes[]","name":"addedG1PubKey","type":"bytes[]"},{"internalType":"uint256","name":"removeList","type":"uint256"},{"internalType":"bytes","name":"seal","type":"bytes"},{"components":[{"internalType":"uint256","name":"bitmap","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"uint256","name":"round","type":"uint256"}],"internalType":"struct ILightNodePoint.istanbulAggregatedSeal","name":"aggregatedSeal","type":"tuple"},{"components":[{"internalType":"uint256","name":"bitmap","type":"uint256"},{"internalType":"bytes","name":"signature","type":"bytes"},{"internalType":"uint256","name":"round","type":"uint256"}],"internalType":"struct ILightNodePoint.istanbulAggregatedSeal","name":"parentAggregatedSeal","type":"tuple"}],"internalType":"struct ILightNodePoint.istanbulExtra","name":"ist","type":"tuple"},{"components":[{"internalType":"uint256","name":"xr","type":"uint256"},{"internalType":"uint256","name":"xi","type":"uint256"},{"internalType":"uint256","name":"yr","type":"uint256"},{"internalType":"uint256","name":"yi","type":"uint256"}],"internalType":"struct IBLSPoint.G2","name":"aggPk","type":"tuple"},{"components":[{"internalType":"uint256","name":"receiptType","type":"uint256"},{"internalType":"bytes","name":"receiptRlp","type":"bytes"}],"internalType":"struct ILightNodePoint.TxReceiptRlp","name":"txReceiptRlp","type":"tuple"},{"internalType":"bytes","name":"keyIndex","type":"bytes"},{"internalType":"bytes[]","name":"proof","type":"bytes[]"}],"internalType":"struct ILightNodePoint.receiptProof","name":"_receiptProof","type":"tuple"}],"name":"getBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"pure","type":"function"}]`
	MaticAbiJson = `[{"inputs":[{"components":[{"internalType":"bytes","name":"parentHash","type":"bytes"},{"internalType":"bytes","name":"sha3Uncles","type":"bytes"},{"internalType":"address","name":"miner","type":"address"},{"internalType":"bytes","name":"stateRoot","type":"bytes"},{"internalType":"bytes","name":"transactionsRoot","type":"bytes"},{"internalType":"bytes","name":"receiptsRoot","type":"bytes"},{"internalType":"bytes","name":"logsBloom","type":"bytes"},{"internalType":"uint256","name":"difficulty","type":"uint256"},{"internalType":"uint256","name":"number","type":"uint256"},{"internalType":"uint256","name":"gasLimit","type":"uint256"},{"internalType":"uint256","name":"gasUsed","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"},{"internalType":"bytes","name":"mixHash","type":"bytes"},{"internalType":"bytes","name":"nonce","type":"bytes"},{"internalType":"uint256","name":"baseFeePerGas","type":"uint256"}],"internalType":"struct Verify.BlockHeader[]","name":"_blockHeaders","type":"tuple[]"}],"name":"getHeadersBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"pure","type":"function"},{"inputs":[{"components":[{"components":[{"internalType":"bytes","name":"parentHash","type":"bytes"},{"internalType":"bytes","name":"sha3Uncles","type":"bytes"},{"internalType":"address","name":"miner","type":"address"},{"internalType":"bytes","name":"stateRoot","type":"bytes"},{"internalType":"bytes","name":"transactionsRoot","type":"bytes"},{"internalType":"bytes","name":"receiptsRoot","type":"bytes"},{"internalType":"bytes","name":"logsBloom","type":"bytes"},{"internalType":"uint256","name":"difficulty","type":"uint256"},{"internalType":"uint256","name":"number","type":"uint256"},{"internalType":"uint256","name":"gasLimit","type":"uint256"},{"internalType":"uint256","name":"gasUsed","type":"uint256"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bytes","name":"extraData","type":"bytes"},{"internalType":"bytes","name":"mixHash","type":"bytes"},{"internalType":"bytes","name":"nonce","type":"bytes"},{"internalType":"uint256","name":"baseFeePerGas","type":"uint256"}],"internalType":"struct Verify.BlockHeader[]","name":"headers","type":"tuple[]"},{"components":[{"components":[{"internalType":"uint256","name":"receiptType","type":"uint256"},{"internalType":"bytes","name":"postStateOrStatus","type":"bytes"},{"internalType":"uint256","name":"cumulativeGasUsed","type":"uint256"},{"internalType":"bytes","name":"bloom","type":"bytes"},{"components":[{"internalType":"address","name":"addr","type":"address"},{"internalType":"bytes[]","name":"topics","type":"bytes[]"},{"internalType":"bytes","name":"data","type":"bytes"}],"internalType":"struct Verify.TxLog[]","name":"logs","type":"tuple[]"}],"internalType":"struct Verify.TxReceipt","name":"txReceipt","type":"tuple"},{"internalType":"bytes","name":"keyIndex","type":"bytes"},{"internalType":"bytes[]","name":"proof","type":"bytes[]"}],"internalType":"struct Verify.ReceiptProof","name":"receiptProof","type":"tuple"}],"internalType":"struct LightNode.ProofData","name":"_proof","type":"tuple"}],"name":"getBytes","outputs":[{"internalType":"bytes","name":"","type":"bytes"}],"stateMutability":"pure","type":"function"}]`
)

var (
	Matic, _ = abi.JSON(strings.NewReader(MaticAbiJson))
	Mcs, _   = abi.JSON(strings.NewReader(McsAbi))
)
